(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{490:function(t,e,s){t.exports=s.p+"assets/img/single_dc_cluster.99b4fbf9.png"},491:function(t,e,s){t.exports=s.p+"assets/img/write_with_quorum.c1d2280c.png"},492:function(t,e,s){t.exports=s.p+"assets/img/read_with_quorum.c2f1f0a7.png"},547:function(t,e,s){"use strict";s.r(e);var a=s(31),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("카산드라는 기본적으로 "),a("code",[t._v("Eventual consistency")]),t._v("를 보장하는 Storage system이지만 Consistency Level 설정에 따라 "),a("code",[t._v("Strong Consistency")]),t._v("를 보장받을 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"eventual-consistency-vs-strong-consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventual-consistency-vs-strong-consistency"}},[t._v("#")]),t._v(" Eventual Consistency vs Strong Consistency")]),t._v(" "),a("h3",{attrs:{id:"eventual-consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventual-consistency"}},[t._v("#")]),t._v(" Eventual Consistency")]),t._v(" "),a("ul",[a("li",[t._v("최종적으로는 데이터의 Consistency를 보장하지만 현재 시점에는 데이터의 Consistency를 보장할 수 없다.")]),t._v(" "),a("li",[t._v("즉 "),a("code",[t._v("클라이언트에게 반환하는 데이터가 최신 상태의 데이터가 아닐 가능성이 존재하는 것이다.")])]),t._v(" "),a("li",[t._v("항상 최신 상태의 데이터 반환을 보장하지 않으므로 적은 수에 node에게 의존한다. 그러므로 Strong Consistency를 보장하는 시스템에 비해 "),a("code",[t._v("Availability은 높고 Latency는 낮다")])])]),t._v(" "),a("h3",{attrs:{id:"strong-consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strong-consistency"}},[t._v("#")]),t._v(" Strong Consistency")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("클라이언트에게 반환하는 데이터가 항상 최신 상태의 데이터임을 보장한다.")])]),t._v(" "),a("li",[t._v("항상 최신 상태의 데이터를 반환해야 하므로 많은 수의 node에게 의존한다. 그러므로 Eventual Consistency를 보장하는 시스템에 비해 "),a("code",[t._v("Availability은 낮고 Latency는 높다")])])]),t._v(" "),a("h3",{attrs:{id:"요약"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#요약"}},[t._v("#")]),t._v(" 요약")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Availability")]),t._v(" "),a("th",{staticStyle:{"text-align":"right"}},[t._v("Latency")]),t._v(" "),a("th",{staticStyle:{"text-align":"right"}},[t._v("return latest data")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Eventual Consistency")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("높음")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("낮음")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("보장 X")])]),t._v(" "),a("tr",[a("td",[t._v("Strong Consistency")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("낮음")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("높음")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("보장 O")])])])]),t._v(" "),a("h2",{attrs:{id:"strong-consistency를-보장할-수-있는-consistency-level"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strong-consistency를-보장할-수-있는-consistency-level"}},[t._v("#")]),t._v(" Strong Consistency를 보장할 수 있는 Consistency Level")]),t._v(" "),a("blockquote",[a("p",[t._v("Consistency Level에 대해 궁금하시면 "),a("a",{attrs:{href:"https://pompitzz.github.io/blog/Cassandra/Cassandra_Consistency_Level.html#write-consistency-levels",target:"_blank",rel:"noopener noreferrer"}},[t._v("카산드라 Consistency Level"),a("OutboundLink")],1),t._v(" 게시글을 참고하세요.")])]),t._v(" "),a("p",[a("strong",[t._v("카산드라 Ring Cluster 구성은 아래와 같다고 가정한다.")]),t._v(" "),a("img",{attrs:{src:s(490),alt:"single_dc_cluster"}})]),t._v(" "),a("ul",[a("li",[t._v("Single datacenter")]),t._v(" "),a("li",[t._v("Replication factor: 3")])]),t._v(" "),a("h3",{attrs:{id:"_1-write-all-read-one"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-write-all-read-one"}},[t._v("#")]),t._v(" 1. Write: ALL, Read: ONE")]),t._v(" "),a("ul",[a("li",[t._v("Write consistency level이 ALL이므로 "),a("code",[t._v("모든 replica node에 write request가 처리되어야 한다.")])]),t._v(" "),a("li",[t._v("Write ALL로 인해 모든 replica node가 최신 데이터를 가지므로 특정 "),a("code",[t._v("하나의 node에게만 Read 요청을 보내도 최신 상태 데이터를 반환 받을 수 있다.")])])]),t._v(" "),a("p",[a("strong",[t._v("특징")])]),t._v(" "),a("ul",[a("li",[t._v("하나의 node만 다운되어도 Write가 실패하므로 "),a("code",[t._v("Availability가 낮다.")])]),t._v(" "),a("li",[t._v("하지만 Read를 ONE으로 할 수 있기 때문에 "),a("code",[t._v("Read Reuqest의 latency를 최대한 적게하면서 Strong Consistency를 보장할 수 있다.")])]),t._v(" "),a("li",[t._v("Strong consistency가 필요하고 write에 비해 read request가 매우 많다면 고려해볼만 하다.")])]),t._v(" "),a("h3",{attrs:{id:"_2-write-quorum-read-quorum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-write-quorum-read-quorum"}},[t._v("#")]),t._v(" 2. Write: QUORUM, Read: QUORUM")]),t._v(" "),a("ul",[a("li",[t._v("replication factor가 3이므로 QUORUM=2이다."),a("RouterLink",{attrs:{to:"/Cassandra/Cassandra_Consistency_Level.html#_2-each-quorum"}},[t._v("(QUORUM 구하는 법)")])],1),t._v(" "),a("li",[t._v("즉 2개의 replica node에 write request가 처리되면 Write 동작은 성공한다.")]),t._v(" "),a("li",[t._v("그리고 read request 또한 2개의 replica node에게 전달되므로 전달 받은 "),a("code",[t._v("두개의 node중 하나의 node는 반드시 최신 상태의 데이터를 가지고 있으므로 Strong Consistency가 보장된다.")])])]),t._v(" "),a("p",[a("strong",[t._v("특징")])]),t._v(" "),a("ul",[a("li",[t._v("Read와 Write가 두 개의 node에게 의존하므로 "),a("code",[t._v("하나의 node가 down되어도 정상 동작")])]),t._v(" "),a("li",[t._v("Strong consistency가 필요한 경우 가장 무난하게 적용할 수 있는 Level")])]),t._v(" "),a("h3",{attrs:{id:"_3-write-one-read-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-write-one-read-all"}},[t._v("#")]),t._v(" 3. Write: ONE, Read: ALL")]),t._v(" "),a("ul",[a("li",[t._v("Write consistency level이 ONE이므로 하나의 replica node에 write request가 처리되면 Write 동작은 성공한다.")]),t._v(" "),a("li",[t._v("Read consistency level이 ALL이므로 "),a("code",[t._v("모든 replica node에게 read request가 전달되므로 Strong Consistency가 보장된다.")])])]),t._v(" "),a("p",[a("strong",[t._v("특징")])]),t._v(" "),a("ul",[a("li",[t._v("하나의 node만 다운되어도 Read가 실패하므로 "),a("code",[t._v("Availability가 낮다.")])]),t._v(" "),a("li",[t._v("하지만 Write를 ONE으로 할 수 있기 때문에 "),a("code",[t._v("Write Reuqest의 latency를 최대한 적게하면서 Strong Consistency를 보장할 수 있다.")])]),t._v(" "),a("li",[t._v("Strong consistency가 필요하고 트래픽이 write request의 트래픽이 크다면 고려해볼만 하다.")])]),t._v(" "),a("blockquote",[a("p",[t._v("multiple datacenter로 카산드라 클러스터를 구성했을 경우 datacenter 사용 방식에 따라 LOCAL_QUORUM을 활용할 수도 있습니다.")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"어떻게-strong-consistency가-보장-될까"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#어떻게-strong-consistency가-보장-될까"}},[t._v("#")]),t._v(" 어떻게 Strong Consistency가 보장 될까?")]),t._v(" "),a("p",[a("code",[t._v("Write: QUORUM, Read: QUORUM")]),t._v(" 케이스에 대한 예시")]),t._v(" "),a("p",[a("img",{attrs:{src:s(491),alt:"write_with_quorum"}})]),t._v(" "),a("ol",[a("li",[t._v("client가 QUORUM consistency level로 write request 전송")]),t._v(" "),a("li",[t._v("coordinator node는 "),a("code",[t._v("모든 replica node에게 write request를 전달")])]),t._v(" "),a("li",[t._v("1번 노드에서 write가 완료되어 ACK 응답")]),t._v(" "),a("li",[t._v("3번 노드에서 write가 완료되어 ACK 응답")]),t._v(" "),a("li",[t._v("QUORUM(2)수 만큼의 replica node에서 write request가 성공했으므로 client에게 응답")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("5번 노드는 이슈로 인해 write request 실패")])])]),t._v(" "),a("hr"),t._v(" "),a("p",[a("img",{attrs:{src:s(492),alt:"read_with_quorum"}})]),t._v(" "),a("ol",[a("li",[t._v("client가 QUORUM consistency level로 read request 전송")]),t._v(" "),a("li",[t._v("coordinator node는 "),a("code",[t._v("QUORUM 수 만큼의 replica node에게 read request를 전달")])]),t._v(" "),a("li",[t._v("1번 노드는 latest data를 반환")]),t._v(" "),a("li",[a("code",[t._v("5번 노드는 이전의 write request가 실패했으므로 stale data를 반환")])]),t._v(" "),a("li",[t._v("coordinator node는 응답받은 두 개의 데이터의 timestamp를 비교하여 stale data를 가진 5번 node가 latest data를 가질 수 있도록 read repair 수행 ("),a("a",{attrs:{href:"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/operations/opsRepairNodesReadRepair.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Detail Docs"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("li",[t._v("client에게 latest data를 반환")])]),t._v(" "),a("blockquote",[a("p",[t._v("실제로는 하나의 node에게 direct read request를 보내고 나머지 node에겐 digest request를 보냅니다.")]),t._v(" "),a("p",[t._v("자세한 내용이 궁금하시면 공식 문서("),a("a",{attrs:{href:"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlClientRequestsRead.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How are read requests accomplished?"),a("OutboundLink")],1),t._v(")를 참고하세요.")])]),t._v(" "),a("h2",{attrs:{id:"strong-consistency를-보장할-수-없다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strong-consistency를-보장할-수-없다"}},[t._v("#")]),t._v(" Strong Consistency를 보장할 수 없다?")]),t._v(" "),a("p",[a("code",[t._v("Write: QUORUM, Read: QUORUM")]),t._v("에서 위 예시처럼 Write 요청이 완료된 후 Read 요청이 들어오는게 아니라 Write 요청 도중에 Read 요청이 들어온다면 Strong Consistency를 보장할 수 없게 된다.")]),t._v(" "),a("p",[t._v("그리고 카산드라는 "),a("code",[t._v("최종 쓰기 승리(LWW)")]),t._v(" 기법으로 충돌을 해결하기 때문에 시간에 의존한다. 즉, 동일 키에 쓰기 요청이 동시에 들어온다면 가장 최신의 쓰기로 저장된다. 분산 시스템에서 노드간의 시간은 신뢰할 수 없기 때문에 Strong Consistency를 보장할 수 없다고 보는 것이 안전하다.")]),t._v(" "),a("ul",[a("li",[t._v("참고: "),a("a",{attrs:{href:"https://pompitzz.github.io/blog/ComputerScience/DesigningDataIntensiveApplication/ch9.html#%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%89%E1%85%A5%E1%86%BC-%E1%84%89%E1%85%B5%E1%84%89%E1%85%B3%E1%84%90%E1%85%A6%E1%86%B7-%E1%84%80%E1%85%AE%E1%84%8E%E1%85%AE%E1%86%A8%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5",target:"_blank",rel:"noopener noreferrer"}},[t._v("선형성 시스템 구축하기"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://pompitzz.github.io/blog/ComputerScience/DesigningDataIntensiveApplication/ch8.html#%E1%84%89%E1%85%B5%E1%86%AB%E1%84%85%E1%85%AC%E1%84%89%E1%85%A5%E1%86%BC-%E1%84%8B%E1%85%A5%E1%86%B9%E1%84%82%E1%85%B3%E1%86%AB-%E1%84%89%E1%85%B5%E1%84%80%E1%85%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("신뢰성 없는 시계"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"참고-자료"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#참고-자료"}},[t._v("#")]),t._v(" 참고 자료")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlAboutDataConsistency.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How are consistent read and write operations handled?(Datastax)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlClientRequestsRead.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How are read requests accomplished?(Datastax)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlClientRequestsWrite.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How are write requests accomplished?(Datastax)"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);