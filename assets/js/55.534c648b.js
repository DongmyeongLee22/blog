(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{560:function(t,a,e){"use strict";e.r(a);var r=e(31),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"지속-연결로-접속량을-절약"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#지속-연결로-접속량을-절약"}},[t._v("#")]),t._v(" 지속 연결로 접속량을 절약")]),t._v(" "),e("ul",[e("li",[t._v("하나의 HTML에 여러 이미지가 포함되어 있으면 해당 브라우저는 HTML 문서의 이미지를 얻기 위해 여러번의 요청이 발생한다.")]),t._v(" "),e("li",[t._v("만약 여러번의 요청마다 매번 TCP를 연결하고 종료하는 것을 반복한다면 비효율적이다.")]),t._v(" "),e("li",[t._v("이를 해결하기 위해 "),e("strong",[t._v("지속 연결")]),t._v("이 고안되었고 "),e("strong",[t._v("어느 한 쪽이 먼저 명시적으로 연결을 종료하지 않는 한 TCP 연결을 계속 유지하도록 한다.")])])]),t._v(" "),e("h2",{attrs:{id:"http-pipelining"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-pipelining"}},[t._v("#")]),t._v(" HTTP pipelining")]),t._v(" "),e("ul",[e("li",[t._v("지속 연결은 HTTP pipelining을 가능하게 하여 여러번의 요청을 동시에 송신할 수 있도록 한다.")])]),t._v(" "),e("h2",{attrs:{id:"여러-데이터를-보내는-멀티파트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#여러-데이터를-보내는-멀티파트"}},[t._v("#")]),t._v(" 여러 데이터를 보내는 멀티파트")]),t._v(" "),e("ul",[e("li",[t._v("HTTP는 멀티파트에 대응하고 있어 하나의 메시지 바디 내부에 여러개의 엔티티를 포함시킬 수 있다. 주로 이미지나 텍스트 파일등을 업로드할 때 활용된다.")]),t._v(" "),e("li",[t._v("멀티파트 각각의 엔티티를 구별하기 위해")])]),t._v(" "),e("h2",{attrs:{id:"content-negotiation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#content-negotiation"}},[t._v("#")]),t._v(" Content Negotiation")]),t._v(" "),e("ul",[e("li",[t._v("사용자의 환경에 맞게 콘텐츠를 다르게 표시해주는 것")])]),t._v(" "),e("h3",{attrs:{id:"_1-server-driven-negotition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-server-driven-negotition"}},[t._v("#")]),t._v(" 1. Server-driven Negotition")]),t._v(" "),e("ul",[e("li",[t._v("서버 측에서 리퀘스트 헤더 필드의 정보를 통해 자동적으로 Content Negotiation을 수행한다.")])]),t._v(" "),e("h3",{attrs:{id:"_2-agent-driven-negotition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-agent-driven-negotition"}},[t._v("#")]),t._v(" 2. Agent-driven Negotition")]),t._v(" "),e("ul",[e("li",[t._v("클라이언트 측에서 브라우저에 표시된 선택지들 중 사용자가 직접 선택하여 Content Negotiation을 수행한다.")])]),t._v(" "),e("h3",{attrs:{id:"_3-transparent-negotition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-transparent-negotition"}},[t._v("#")]),t._v(" 3. Transparent Negotition")]),t._v(" "),e("ul",[e("li",[t._v("Server-dreiven, Agent-driven을 모두 활용하는 방식")])]),t._v(" "),e("h2",{attrs:{id:"가상호스트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#가상호스트"}},[t._v("#")]),t._v(" 가상호스트")]),t._v(" "),e("ul",[e("li",[t._v("물리적으로는 한 개인 서버를 가상으로 여러대의 서버가 있는 것처럼 호스팅하는 방식")]),t._v(" "),e("li",[e("strong",[t._v("여러개의 도메인들이 실제론 하나의 IP주소를 가지기 때문에 반드시 Host 헤더 필드를 지정해야 한다.")]),t._v(" "),e("ul",[e("li",[t._v("HTTP/1.1에서 유일한 필수 헤더 필드가 "),e("code",[t._v("Host")]),t._v("이다.")])])])]),t._v(" "),e("h2",{attrs:{id:"터널"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#터널"}},[t._v("#")]),t._v(" 터널")]),t._v(" "),e("ul",[e("li",[t._v("요구에 따라서 다른 서버와의 통신 경로를 확립")]),t._v(" "),e("li",[t._v("SSL 같은 암호화 통신을 통해 서버와 안전하게 통신을 하기 위해 사용한다.")])]),t._v(" "),e("h2",{attrs:{id:"set-cookie-헤더"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-cookie-헤더"}},[t._v("#")]),t._v(" Set-Cookie 헤더")]),t._v(" "),e("h3",{attrs:{id:"_1-expires-속성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-expires-속성"}},[t._v("#")]),t._v(" 1. Expires 속성")]),t._v(" "),e("ul",[e("li",[t._v("쿠키의 유효 기한을 지정할 수 있고 생략된 경우 브라우저 세션이 유지되는 동안만 유효하다.(보통 브라우저를 닫을 때 까지)")]),t._v(" "),e("li",[e("strong",[t._v("한번 서버에서 송출한 클라이언트 쿠키는 만료되지 않는 이상 서버에서 명시적으로 지울 수 있는 방법이 없다.")])])]),t._v(" "),e("h3",{attrs:{id:"_2-secure-속성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-secure-속성"}},[t._v("#")]),t._v(" 2. Secure 속성")]),t._v(" "),e("ul",[e("li",[t._v("HTTPS 통신에서만 쿠키를 송신할 수 있도록 설정하는 속성")])]),t._v(" "),e("h3",{attrs:{id:"_3-httponly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-httponly"}},[t._v("#")]),t._v(" 3. HttpOnly")]),t._v(" "),e("ul",[e("li",[t._v("쿠키를 JS에서 사용하지 못하도록 제한하는 속성")])]),t._v(" "),e("h2",{attrs:{id:"http의-약점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http의-약점"}},[t._v("#")]),t._v(" HTTP의 약점")]),t._v(" "),e("h3",{attrs:{id:"_1-평문-통신이므로-도청-가능"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-평문-통신이므로-도청-가능"}},[t._v("#")]),t._v(" 1) 평문 통신이므로 도청 가능")]),t._v(" "),e("ul",[e("li",[t._v("TCP/IP 구조의 통신 내용은 모두 통신 경로의 중간에서 엿볼 수 있으므로 평문 통신인 HTTP는 모든 내용을 도청 당할 수 있다.")]),t._v(" "),e("li",[t._v("이를 방지하기 위해 평문 데이터를 암호화하여야 한다.")])]),t._v(" "),e("h3",{attrs:{id:"_2-통신-상대를-확인하지-않으므로-위장-가능"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-통신-상대를-확인하지-않으므로-위장-가능"}},[t._v("#")]),t._v(" 2) 통신 상대를 확인하지 않으므로 위장 가능")]),t._v(" "),e("ul",[e("li",[t._v("HTTP는 통신 상대를 확인하지 않고 들어오는 요청을 처리하기 떄문에 위장이 가능하다.")]),t._v(" "),e("li",[t._v("이를 방지하기 위해 클라이언트 인증이 필요하다.")])]),t._v(" "),e("h3",{attrs:{id:"_3-완전성을-증명할-수-없으므로-변조-가능"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-완전성을-증명할-수-없으므로-변조-가능"}},[t._v("#")]),t._v(" 3) 완전성을 증명할 수 없으므로 변조 가능")]),t._v(" "),e("ul",[e("li",[t._v("클라이언트와 서버 사이에 주고받는 데이터가 변조되더라도 완전성을 증명할 수 없으므로 상대방은 해당 데이터가 변조되었는지 알 수 없다.")]),t._v(" "),e("li",[t._v("데이터가 변조되지 않았다는 완전성을 증명할 수 있어야 한다.")])]),t._v(" "),e("blockquote",[e("p",[t._v("HTTP의 약점을 보완하기 위해 HTTPS가 생겨났다.")])])])}),[],!1,null,null,null);a.default=_.exports}}]);