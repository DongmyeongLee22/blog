(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{491:function(t,r,a){t.exports=a.p+"assets/img/abstract-factory.ef81ef4f.png"},492:function(t,r,a){t.exports=a.p+"assets/img/factory-method.df3ad291.png"},538:function(t,r,a){"use strict";a.r(r);var v=a(31),_=Object(v.a)({},(function(){var t=this,r=t.$createElement,v=t._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"추상-팩토리-abstract-factory-패턴"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#추상-팩토리-abstract-factory-패턴"}},[t._v("#")]),t._v(" 추상 팩토리(Abstract Factory) 패턴")]),t._v(" "),v("p",[t._v("서로 관련성 있거나 독립적인 여러 객체군을 생성하기 위한 인터페이스를 제공하는 패턴")]),t._v(" "),v("h3",{attrs:{id:"구조"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#구조"}},[t._v("#")]),t._v(" 구조")]),t._v(" "),v("img",{attrs:{src:a(491)}}),t._v(" "),v("ul",[v("li",[v("strong",[t._v("AbstractFactory")]),t._v(": 개념적 제품들에 대한 생성 인터페이스를 정의")]),t._v(" "),v("li",[v("strong",[t._v("ConcreteFactory")]),t._v(": 구체적인 제품을 실제로 생성하는 구현 클래스")]),t._v(" "),v("li",[v("strong",[t._v("AbstractProduct")]),t._v(": 개념적인 제품 객체애 대한 인터페이스를 정의")]),t._v(" "),v("li",[v("strong",[t._v("ConcreteProduct")]),t._v(": 구체적인 제품들")])]),t._v(" "),v("h3",{attrs:{id:"활용성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#활용성"}},[t._v("#")]),t._v(" 활용성")]),t._v(" "),v("ul",[v("li",[t._v("객체의 생성 및 표현되는 방식과 무관하게 시스템과 독립적으로 만들고 싶을 때")]),t._v(" "),v("li",[t._v("여러 제품군 중 하나를 선택해서 시스템을 설정해야 하고 한번 구성한 제품을 다른 것으로 대체할 수 있을 때")]),t._v(" "),v("li",[t._v("관련된 제품 객체들이 함께 사용되도록 설계되었고, 이 부분에 대한 제약을 외부에서도 지켜지도록 하고 싶을 때")])]),t._v(" "),v("h3",{attrs:{id:"결과"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#결과"}},[t._v("#")]),t._v(" 결과")]),t._v(" "),v("ul",[v("li",[t._v("클라이언트에서는 추상화된 Factory와 Product만을 알게되고 구체적인 구현은 캡슐화 된다.")]),t._v(" "),v("li",[t._v("구체적인 구현이 캡슐화되어 제품군을 쉽게 대체할 수 있다.\n"),v("ul",[v("li",[t._v("기존 시스템의 변경 없이 새로운 상황에 맞는 ConcreteFactory와 ConcreteProduct를 구현하기만 하면 된다.")])])]),t._v(" "),v("li",[t._v("제품 사이의 일관성을 증진시킨다.\n"),v("ul",[v("li",[t._v("하나의 Factory에서 제품군을 생성하기 때문에 일관성을 가질 수 있다.")])])]),t._v(" "),v("li",[v("strong",[t._v("새로운 종류의 제품을 추가하기 어렵다.")]),t._v(" "),v("ul",[v("li",[t._v("새로운 제품 추가 시 모든 ConcreteFactory의 변경이 필요해진다.")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("추상 팩터리를 활용해 시스템에서 도메인 모델들에 대한 Repository 구현체들을 데이터베이스 별로 구분된 추상화된 Factory에서 제공하도록 하여 도메인의 변경없이 데이터베이스 시스템을 변경할 수 있을 것이다.")])]),t._v(" "),v("h2",{attrs:{id:"팩토리-메서드-factory-method-패턴"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#팩토리-메서드-factory-method-패턴"}},[t._v("#")]),t._v(" 팩토리 메서드(Factory Method) 패턴")]),t._v(" "),v("p",[t._v("객체를 생성하기 위한 인터페이스를 정의하고, 서브클래스에서 해당 클래스의 인스턴스를 생성해주는 패턴")]),t._v(" "),v("h3",{attrs:{id:"활용성-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#활용성-2"}},[t._v("#")]),t._v(" 활용성")]),t._v(" "),v("ul",[v("li",[t._v("어떤 클래스가 자신이 생성해야 할 객체의 클래스를 예측할 수 없을 때")]),t._v(" "),v("li",[t._v("생성할 객체를 기술하는 책임을 서브 클래스가 지정했으면 할 때")])]),t._v(" "),v("h3",{attrs:{id:"구조-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#구조-2"}},[t._v("#")]),t._v(" 구조")]),t._v(" "),v("img",{staticStyle:{"max-height":"300px"},attrs:{src:a(492)}}),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Product")]),t._v(": 팩토리 메서드가 생성하는 객체의 인터페이스")]),t._v(" "),v("li",[v("strong",[t._v("ConcreteProduct")]),t._v(": 팩토리 메서드가 실제로 생성하는 인터페이스의 구현체")]),t._v(" "),v("li",[v("strong",[t._v("Creator")]),t._v(": 팩토리 메서드를 정의하는 인터페이스")]),t._v(" "),v("li",[v("strong",[t._v("ConcreteCreator")]),t._v(": 팩토리 메서드를 구현하여 "),v("code",[t._v("ConcreteProduct")]),t._v(" 생성을 책임지는 구현체")])]),t._v(" "),v("h3",{attrs:{id:"결과-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#결과-2"}},[t._v("#")]),t._v(" 결과")]),t._v(" "),v("ul",[v("li",[t._v("ConcreteProduct를 캡슐화하여 특정 구현에 대한 종속성을 제거해준다.")]),t._v(" "),v("li",[t._v("새로운 종류의 "),v("code",[t._v("Product")]),t._v("가 추가되어도 기존 코드의 변경없이 새로운 "),v("code",[t._v("Creator")]),t._v("를 구현하여 확장이 가능해진다.(OCP)")]),t._v(" "),v("li",[v("strong",[t._v("클래스가 늘어나 구조가 복잡해질 수 있다.")])])]),t._v(" "),v("blockquote",[v("p",[t._v("팩토리 메서드 패턴은 생성 패턴 중 단순한 방법에 속하지만, 단점으로 제품 클래스가 바뀔 때 마다 새로운 서브클래스를 생성해야 한다.")])]),t._v(" "),v("p",[v("strong",[t._v("병렬적인 클래스 계통")])]),t._v(" "),v("ul",[v("li",[t._v("팩토리 메서드는 병렬적인 클래스 계통이 만들어질 때 자주 사용된다.")])]),t._v(" "),v("h3",{attrs:{id:"사용예"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#사용예"}},[t._v("#")]),t._v(" 사용예")]),t._v(" "),v("ul",[v("li",[t._v("스프링의 "),v("code",[t._v("BeanFactory")])]),t._v(" "),v("li",[t._v("자바의 "),v("code",[t._v("Calendar")]),t._v(" "),v("ul",[v("li",[t._v("SimpleFactory 방식으로 되어있어 팩토리 메서드 패턴과 구조가 동일하진 않음.")])])])]),t._v(" "),v("h2",{attrs:{id:"단일체-singleton-패턴"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#단일체-singleton-패턴"}},[t._v("#")]),t._v(" 단일체(Singleton) 패턴")]),t._v(" "),v("p",[t._v("오직 한 개의 클래스 인스턴스만을 갖도록 보장하고, 이에 대한 전역적인 접근정을 제공하는 패턴")]),t._v(" "),v("h3",{attrs:{id:"싱글톤-레지스트리"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#싱글톤-레지스트리"}},[t._v("#")]),t._v(" 싱글톤 레지스트리")]),t._v(" "),v("p",[t._v("싱글톤 레지스트리에 각 싱글톤별 이름을 갖도록 등록하고 이름을 통해 해당 싱글톤을 가져오도록 하면 싱글톤을 유연하게 사용할 수 있다.")]),t._v(" "),v("ul",[v("li",[t._v("Spring에서 이 방식을 사용하여 빈의 싱글톤을 제공해준다.")])]),t._v(" "),v("h3",{attrs:{id:"구현"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#구현"}},[t._v("#")]),t._v(" 구현")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://pompitzz.github.io/blog/Java/EffectiveJava.html#item-3-private-%E1%84%89%E1%85%A2%E1%86%BC%E1%84%89%E1%85%A5%E1%86%BC%E1%84%8C%E1%85%A1%E1%84%82%E1%85%A1-%E1%84%8B%E1%85%A7%E1%86%AF%E1%84%80%E1%85%A5-%E1%84%90%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8B%E1%85%B3%E1%84%85%E1%85%A9-%E1%84%89%E1%85%B5%E1%86%BC%E1%84%80%E1%85%B3%E1%86%AF%E1%84%90%E1%85%A5%E1%86%AB%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%8B%E1%85%B3%E1%86%AF-%E1%84%87%E1%85%A9%E1%84%8C%E1%85%B3%E1%86%BC%E1%84%92%E1%85%A1%E1%84%85%E1%85%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("ITEM 3. private 생성자나 열거 타입으로 싱글턴임을 보증하라."),v("OutboundLink")],1)])]),t._v(" "),v("h3",{attrs:{id:"사용예-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#사용예-2"}},[t._v("#")]),t._v(" 사용예")]),t._v(" "),v("ul",[v("li",[t._v("자바의 "),v("code",[t._v("Runtime")]),t._v("이 싱글톤 패턴을 사용한다.")])])])}),[],!1,null,null,null);r.default=_.exports}}]);